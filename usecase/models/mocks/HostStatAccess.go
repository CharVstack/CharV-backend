// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/CharVstack/CharV-backend/usecase/models (interfaces: HostStatAccess)

// Package mock_models is a generated GoMock package.
package mock_models

import (
	reflect "reflect"

	entity "github.com/CharVstack/CharV-backend/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockHostStatAccess is a mock of HostStatAccess interface.
type MockHostStatAccess struct {
	ctrl     *gomock.Controller
	recorder *MockHostStatAccessMockRecorder
}

// MockHostStatAccessMockRecorder is the mock recorder for MockHostStatAccess.
type MockHostStatAccessMockRecorder struct {
	mock *MockHostStatAccess
}

// NewMockHostStatAccess creates a new mock instance.
func NewMockHostStatAccess(ctrl *gomock.Controller) *MockHostStatAccess {
	mock := &MockHostStatAccess{ctrl: ctrl}
	mock.recorder = &MockHostStatAccessMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHostStatAccess) EXPECT() *MockHostStatAccessMockRecorder {
	return m.recorder
}

// GetCpu mocks base method.
func (m *MockHostStatAccess) GetCpu() (entity.Cpu, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCpu")
	ret0, _ := ret[0].(entity.Cpu)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCpu indicates an expected call of GetCpu.
func (mr *MockHostStatAccessMockRecorder) GetCpu() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCpu", reflect.TypeOf((*MockHostStatAccess)(nil).GetCpu))
}

// GetMem mocks base method.
func (m *MockHostStatAccess) GetMem() (entity.Memory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMem")
	ret0, _ := ret[0].(entity.Memory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMem indicates an expected call of GetMem.
func (mr *MockHostStatAccessMockRecorder) GetMem() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMem", reflect.TypeOf((*MockHostStatAccess)(nil).GetMem))
}

// GetStoragePools mocks base method.
func (m *MockHostStatAccess) GetStoragePools() ([]entity.StoragePool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStoragePools")
	ret0, _ := ret[0].([]entity.StoragePool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStoragePools indicates an expected call of GetStoragePools.
func (mr *MockHostStatAccessMockRecorder) GetStoragePools() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStoragePools", reflect.TypeOf((*MockHostStatAccess)(nil).GetStoragePools))
}
